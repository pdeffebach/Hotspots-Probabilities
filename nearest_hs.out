[?1h=
  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.0   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

2-user 16-core Stata network perpetual license:
       Serial number:  501506227547
         Licensed to:  Research Computing Center
                       University of Chicago

Notes:
      1.  Unicode is supported; see help unicode_advice.
      2.  More than 2 billion observations are allowed; see help obs_advice.
      3.  Maximum number of variables is set to 5000; see help set_maxvar.

. do "master.do" 

. 
. do do/test

. sysuse auto, clear
(1978 Automobile Data)

. 
. noisily sum _all

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
        make |          0
       price |         74    6165.257    2949.496       3291      15906
         mpg |         74     21.2973    5.785503         12         41
       rep78 |         69    3.405797    .9899323          1          5
    headroom |         74    2.993243    .8459948        1.5          5
-------------+---------------------------------------------------------
       trunk |         74    13.75676    4.277404          5         23
      weight |         74    3019.459    777.1936       1760       4840
      length |         74    187.9324    22.26634        142        233
        turn |         74    39.64865    4.399354         31         51
displacement |         74    197.2973    91.83722         79        425
-------------+---------------------------------------------------------
  gear_ratio |         74    3.014865    .4562871       2.19       3.89
     foreign |         74    .2972973    .4601885          0          1

. 
. display "*************** I'm working! **********************"
*************** I'm working! **********************

. 
. 
. 
end of do-file

. // make the count stuff
. // do do/hotspots_near_count
. // 
. // define the program for high and low crime spillovers
. //do do/new_program
. 
. // prepare the dataset 
. //do do/prepare_data
. 
. // 
. // make a dataset for every percentile
. //forvalues i = 5(5)100 {
. //     crime_hetero_u_pct, belowcrimepct(`i') maxrep(1000) 
. // }
. 
. do do/crime_hs_near

. cap program drop crime_hs_near 

. program define crime_hs_near 
  1. syntax, OPERATION(name)
  2. clear
  3. clear mata
  4. set maxvar 20000
  5. 
. *********************************
. * Import the dataset ************
. *********************************
. // 226k observations, 6000 variables
. // id means all streets
. // objectid just means hotspots
. use tmp/ready_sim_loop, clear
  6. 
. *********************************
. * Set maximum repetitions *******
. *********************************
. local maxrep = 1000
  7. 
. 
. ***********************************
. * The for loop ********************
. ***********************************
. 
. display "****** Repetitions in the for loop ***********"
  8. quietly drop if id == objectid
  9. forvalues i = 1/`maxrep' {
 10. /* The goal here is to make a variable 
> for baseline crime only for hotspots. 
> We will use this as the total exposure 
> of crime near you. 
> */
.         qui gen sp250_crime_hsp_`i' = bl_crime_non_std if assign_hsp_`i' == 1
>  & ///
>                 all_assign_hsp_`i' == 2
 11.         
.         qui gen sp250_crime_bw_`i' = bl_crime_non_std if assign_bw_`i' == 1 &
>  ///
>                 all_assign_bw_`i' == 2
 12.         
.         qui gen sp250_crime_hsp_bw_`i' = bl_crime_non_std if assign_hsp_`i' =
> = 1 & /// 
>                 assign_bw_`i' == 1 & all_assign_hsp_`i' == 2 & all_assign_bw_
> `i' == 2
 13. 
. }
 14. 
. ****************************************** 
. * Perform the collapse *******************
. ******************************************
. // keep just the variables we want
. keep id sp250_crime*
 15. 
. // rename id to objectid 
. // so we can merge data from other datasets in
. rename id objectid
 16. 
. 
. dis "************* Collapsing ************"
 17. fcollapse (`operation') sp250*, by(objectid)
 18. 
. 
. *********************************************
. * Merge in with other observations that are not spillovers 
. *********************************************
. quietly merge 1:1 objectid using in_data/treat_status, keepusing(objectid) no
> gen
 19. 
. ****************************************************
. * Replase observations with missing ***************
. ****************************************************
. forvalues i = 1/`maxrep' {
 20.         qui replace sp250_crime_hsp_`i' = 0 if missing(sp250_crime_hsp_`i'
> )
 21.         qui replace sp250_crime_bw_`i' = 0 if missing(sp250_crime_bw_`i')
 22.         qui replace sp250_crime_hsp_bw_`i' = 0 if missing(sp250_crime_hsp_
> bw_`i')
 23. }
 24. 
. 
. **********************************************************
. * Find expected values ***********************************
. ***********************************************************
. // get locals for rowmeans 
. local hsp_vars
 25. local bw_vars
 26. local hsp_bw_vars
 27. forvalues i = 1/`maxrep' {
 28.         local hsp_vars `hsp_vars' sp250_crime_hsp_`i'
 29.         local bw_vars `bw_vars' sp250_crime_bw_`i'
 30.         local hsp_bw_vars `hsp_bw_vars' sp250_crime_hsp_bw_`i'
 31. }
 32. 
. egen e_sp250_crime_hsp = rowmean(`hsp_vars')
 33. egen e_sp250_crime_bw = rowmean(`bw_vars')
 34. egen e_sp250_crime_hsp_bw = rowmean(`hsp_bw_vars')
 35. 
. save out_data/crime_near_hs_sims_`operation', replace
 36. 
. ************************************************************
. * Save a temp file of just the expected value **************
. ***********************************************************
. keep objectid e_*
 37. tempfile expected_values
 38. save `expected_values'
 39. 
. 
. use tmp/ready_real_data, clear
 40. quietly drop if id == objectid 
 41. 
. qui gen sp250_crime_hsp = bl_crime_non_std if treat_hsp == 1 & all_sp250_hsp 
>  == 1
 42. qui gen sp250_crime_bw = bl_crime_non_std if treat_bw == 1 & all_sp250_bw 
>  == 1
 43. qui gen sp250_crime_hsp_bw = bl_crime_non_std if treat_bw == 1 & treat_hsp
>  == 1 & ///
>         all_sp250_hsp == 1 & all_sp250_bw == 1
 44. 
. *********************************************************
. * Keep just the spillover variables we just created *****
. *********************************************************
. keep id ///
> sp250_crime_hsp ///
> sp250_crime_bw ///
> sp250_crime_hsp_bw 
 45. 
. * Rename the id variable
. rename id objectid 
 46. 
. 
. ***********************************************************
. * Perform the collapse *************************************
. ***********************************************************
. fcollapse (`operation') sp250*, by(objectid)
 47. 
. 
. 
. 
. *************************************************************
. * Merge in the rest of the street segments ******************
. *************************************************************
. quietly merge 1:1 objectid using in_data/treat_status, keepusing(objectid) no
> gen
 48. 
. *************************************************************
. * Replace observations with missing *************************
. *************************************************************
. foreach var of varlist sp250* {
 49.         quietly replace `var' = 0 if missing(`var')
 50. }
 51. 
. ******************************************************************
. * Merge in the expected values ***********************************
. ****************************************************************
. merge 1:1 objectid using `expected_values', nogen 
 52. 
. save out_data/crime_near_hs_real_`operation', replace
 53. 
. end

. 
. 
. ***
. 
end of do-file

. crime_hs_near, operation(sum)

****** Repetitions in the for loop ***********
************* Collapsing ************
file out_data/crime_near_hs_sims_sum.dta saved
file /tmp/St07376.000002 saved

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                           137,117  
    -----------------------------------------
file out_data/crime_near_hs_real_sum.dta saved

. crime_hs_near, operation(mean)

****** Repetitions in the for loop ***********
************* Collapsing ************
file out_data/crime_near_hs_sims_mean.dta saved
file /tmp/St07376.000001 saved

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                           137,117  
    -----------------------------------------
file out_data/crime_near_hs_real_mean.dta saved

. ***
. 
. 
. 
. 
end of do-file


. [?1l>